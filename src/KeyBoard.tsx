/*
  Auto-generated by Spline
*/

import useSpline from "@splinetool/r3f-spline";
import { OrthographicCamera } from "@react-three/drei";

export const Scene = ({ ...props }) => {
  const { nodes, materials } = useSpline(
    "./spline/scene.splinecode"
  );
  return (
    <>
      <color attach="background" args={["#a7cfbf"]} />
      <group {...props} dispose={null}>
        <group name="Board" position={[-7, -40.93, -1]}>
          <mesh
            name="BaseBoard"
            geometry={nodes.BaseBoard.geometry}
            material={materials.Board}
            castShadow
            receiveShadow
            position={[7, -65.18, 1]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[3.53, 2.16, 1.08]}
          />
          <mesh
            name="SubBoard"
            geometry={nodes.SubBoard.geometry}
            material={materials["SubBoard Material"]}
            castShadow
            receiveShadow
            position={[7, -41.48, 1]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[3.26, 1.99, 1]}
          />
        </group>
        <group name="WASD">
          <group name="Key S" position={[0, 0, 50]}>
            <mesh
              name="Text"
              geometry={nodes.Text.geometry}
              material={materials["Text Material"]}
              castShadow
              receiveShadow
              position={[0, 31.02, -12.78]}
              rotation={[-Math.PI / 2, 0, 0]}
              scale={0.32}
            />
            <mesh
              name="Cube"
              geometry={nodes.Cube.geometry}
              material={materials["key Cap"]}
              castShadow
              receiveShadow
              position={[0, 16.79, 0]}
            />
          </group>
          <group name="Key D" position={[100, 0, 50]}>
            <mesh
              name="Text1"
              geometry={nodes.Text1.geometry}
              material={materials["Text1 Material"]}
              castShadow
              receiveShadow
              position={[0, 31.02, -12.78]}
              rotation={[-Math.PI / 2, 0, 0]}
              scale={0.32}
            />
            <mesh
              name="Cube1"
              geometry={nodes.Cube1.geometry}
              material={materials["key Cap"]}
              castShadow
              receiveShadow
              position={[0, 16.79, 0]}
            />
          </group>
          <group name="Key A" position={[-100, 0, 50]}>
            <mesh
              name="Text2"
              geometry={nodes.Text2.geometry}
              material={materials["Text2 Material"]}
              castShadow
              receiveShadow
              position={[0, 31.02, -12.78]}
              rotation={[-Math.PI / 2, 0, 0]}
              scale={0.32}
            />
            <mesh
              name="Cube2"
              geometry={nodes.Cube2.geometry}
              material={materials["key Cap"]}
              castShadow
              receiveShadow
              position={[0, 16.79, 0]}
            />
          </group>
          <group name="Key W" position={[0, 0, -50]}>
            <mesh
              name="Text3"
              geometry={nodes.Text3.geometry}
              material={materials["Text3 Material"]}
              castShadow
              receiveShadow
              position={[0, 31.02, -12.78]}
              rotation={[-Math.PI / 2, 0, 0]}
              scale={0.32}
            />
            <mesh
              name="Cube3"
              geometry={nodes.Cube3.geometry}
              material={materials["key Cap"]}
              castShadow
              receiveShadow
              position={[0, 16.79, 0]}
            />
          </group>
        </group>
        <directionalLight
          name="Directional Light"
          castShadow
          intensity={0.7}
          shadow-mapSize-width={1024}
          shadow-mapSize-height={1024}
          shadow-camera-near={-10000}
          shadow-camera-far={100000}
          shadow-camera-left={-500}
          shadow-camera-right={500}
          shadow-camera-top={500}
          shadow-camera-bottom={-500}
          position={[200, 300, 300]}
        />
        <OrthographicCamera
          name="1"
          makeDefault={true}
          zoom={0.81}
          far={100000}
          near={-100000}
          position={[577.35, 577.35, 577.35]}
          rotation={[-Math.PI / 4, 0.62, Math.PI / 6]}
        />
        <hemisphereLight
          name="Default Ambient Light"
          intensity={0.75}
          color="#eaeaea"
        />
      </group>
    </>
  );
}
